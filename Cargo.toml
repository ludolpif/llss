[package]
name = "llss"
version = "0.1.0"
edition = "2024"

# from: https://doc.rust-lang.org/cargo/reference/features.html
# and: https://docs.rs/bevy/latest/bevy/index.html#cargo-features
[dependencies]
anyhow = "*"
#bevy = { version = "0.16.1", features = ["jpeg", "symphonia-all", "sysinfo_plugin", "webp"] }
bevy = { version = "0.16.1", default-features = false, features = [
# from bevy 16.1 defaults minus all 3D and android stuff for now
  "std", "async_executor",
# "android-game-activity",
# "android_shared_stdcxx",
  "animation",
  "bevy_asset", "bevy_audio", "bevy_color", "bevy_core_pipeline", "bevy_gilrs", "bevy_gizmos",
# "bevy_gltf",
  "bevy_input_focus", "bevy_log",
# "bevy_mesh_picking_backend",
# "bevy_pbr",
  "bevy_picking", "bevy_render", "bevy_scene", "bevy_sprite", "bevy_sprite_picking_backend",
  "bevy_state", "bevy_text", "bevy_ui", "bevy_ui_picking_backend", "bevy_window", "bevy_winit",
  "custom_cursor", "default_font", "hdr", "multi_threaded", "png", "smaa_luts", "sysinfo_plugin",
  "tonemapping_luts", "vorbis", "webgl2", "x11",
# Extra that we may use
  "jpeg", "symphonia-all", "webp"
] }
bevy-inspector-egui = { version = "0.32.0", optional = true, default-features = false, features = [
  "bevy_render", "highlight_changes", "egui_clipboard"
] }
bevy_egui = { version = "0.35.1", default-features = false, features = [
# from bevy_egui 0.35 defaults, without open_url to save url+ics stuff for now
  "manage_clipboard", "default_fonts", "render", "picking"
# "open_url"
] }
bevy_enhanced_input = "0.14.1"
bevy_framepace = "0.19.1"
bevy_mod_debugdump = { version = "0.13.0", optional = true }
bevy_webcam = "0.2.0"
crossbeam-channel = "*"
ctrlc = "*"
derive_more = { version = "*", features = ["display", "error"] }
egui = "0.31.0"
egui_dock = "0.16.0"
serde = "*"
serde_json = "*"
transform-gizmo-egui = "0.6.0"
uuid = "*"
xdg = "*"

# from: https://bevyengine.org/learn/quick-start/getting-started/setup/#dynamic-linking
# then: https://docs.rs/bevy/latest/bevy/dev_tools/struct.DevToolsPlugin.html
[features]
default = ["dev_mode", "wayland"] # not a good practice if we were a reusable crate, seems okay for a program
dev_mode = ["dep:bevy-inspector-egui", "dep:bevy_mod_debugdump", "bevy/dynamic_linking", "bevy/bevy_dev_tools", "bevy/file_watcher"]
# "bevy/bevy_debug_stepping", "bevy/detailed_trace", "bevy/trace_tracy", "bevy/trace_tracy_memory"]
wayland = ["bevy/wayland"]

# from https://stackoverflow.com/questions/38803760/how-to-get-a-release-build-with-debugging-information-when-using-cargo
[profile.release-with-debug]
inherits = "release"
debug = true

# from: https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"
